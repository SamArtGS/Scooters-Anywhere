-- Companía:  Scooters Anywhere
-- Project:   Modelo Proyecto Final
-- Author:    Garrido Samuel y Jorge Cárdenas
-- Fecha:     04 de Junio del 2020

/*  
    Segundo Trigger: Checar la fecha de insersión sea con respecto al caso de estudio.
    Segundo trigger: INICIAR SERVICIO. -> CAMBIAR STATUS DEL SCOOTER, QUITAR MONEY O CRÉDITO.
    TERCER TRIGGER: VERIFICAR QUE LA TARJETA DE CRÉDITO TENGA FONDOS
    CUARTO: ASIGNAR FUERA DE ZONA AL INSERTAR COORDENADAS
    QUINTO: VERIFICAR QUE EL SCOOTER NO SE ENCUENTRA EN OTRO SERVICIO EN CURSO.
*/

PROMPT TRIGGER 3: CUANDO UN USUARIO VA A ELIMINAR SU TARJETA SE LE REALIZA UNA
PROMPT PENALIZACIÓN DE 30 PUNTOS SOBRE LOS QUE TENÍA
PROMPT Y SI QUIRE REALIZAR CAMBIOS O QUIERE INSERTAR UNA NUEVA TARJETA
PROMPT SE VERIFICARÁ QUE ESTÉ VIGENTE AL DÍA DE HOY.

CREATE OR REPLACE TRIGGER CHECAR_TARJETA_CLIENTE
BEFORE INSERT OR UPDATE OR DELETE ON TARJETA_CLIENTE
FOR EACH ROW
DECLARE
  V_MES NUMBER;
  V_ANIO NUMBER;
BEGIN
IF DELETING THEN
  UPDATE USUARIO SET PUNTOS = (PUNTOS - 50) WHERE USUARIO_ID = :OLD.USUARIO_ID;
END IF;
IF INSERTING THEN
  SELECT EXTRACT(MONTH FROM SYSDATE) INTO V_MES FROM DUAL;
  SELECT EXTRACT(YEAR FROM SYSDATE) INTO V_ANIO FROM DUAL; 
  IF V_ANIO-2000 > :NEW.ANIO_EXPIRACION THEN
    RAISE_APPLICATION_ERROR(-20040,'INGRESE UNA TARJETA VIGENTE POR FAVOR');
  ELSE
    IF V_MES > :NEW.MES_EXPIRACION AND V_ANIO = :NEW.ANIO_EXPIRACION THEN
      RAISE_APPLICATION_ERROR(-20040,'INGRESE UNA TARJETA VIGENTE POR FAVOR');
    END IF;
  END IF;
END IF;
IF UPDATING THEN 
  SELECT EXTRACT(MONTH FROM SYSDATE) INTO V_MES FROM DUAL;
  SELECT EXTRACT(YEAR FROM SYSDATE) INTO V_ANIO FROM DUAL; 
  IF V_ANIO-2000 > :NEW.ANIO_EXPIRACION THEN
    RAISE_APPLICATION_ERROR(-20041,'INGRESE UNA TARJETA VIGENTE POR FAVOR');
  ELSE
    IF V_MES > :NEW.MES_EXPIRACION AND V_ANIO = :NEW.ANIO_EXPIRACION THEN
      RAISE_APPLICATION_ERROR(-20041,'INGRESE UNA TARJETA VIGENTE POR FAVOR');
    END IF;
  END IF;
END IF;
END;
/