-- Companía:  Scooters Anywhere
-- Project:   Modelo Proyecto Final
-- Author:    Garrido Samuel y Jorge Cárdenas
-- Fecha:     04 de Junio del 2020

/*  
    Primer trigger: Checar la fecha de insersión sea con respecto al caso de estudio.
    Segundo trigger: INICIAR SERVICIO. -> CAMBIAR STATUS DEL SCOOTER, QUITAR MONEY O CRÉDITO.
    TERCER TRIGGER: VERIFICAR QUE LA TARJETA DE CRÉDITO TENGA FONDOS
    CUARTO: ASIGNAR FUERA DE ZONA AL INSERTAR COORDENADAS
    QUINTO: VERIFICAR QUE EL SCOOTER NO SE ENCUENTRA EN OTRO SERVICIO EN CURSO.
*/

declare 
  l_count integer;
  m_count integer;
  n_count integer;

begin
  select count(*)
    into l_count
  from user_triggers
  where trigger_name = 'COBRAR';
  if l_count > 0 then 
     execute immediate 'drop trigger COBRAR';
  end if;
end;
/

begin
  select count(*)
    into m_count
  from user_triggers
  where trigger_name = 'DISPONIBILIDAD_SCOOTER_VIAJE';
  if m_count > 0 then 
     execute immediate 'drop trigger DISPONIBILIDAD_SCOOTER_VIAJE';
  end if;
end;
/

begin
  select count(*)
    into n_count
  from user_triggers
  where trigger_name = 'CHECAR_TARJETA_CLIENTE';
  if n_count > 0 then 
     execute immediate 'drop trigger CHECAR_TARJETA_CLIENTE';
  end if;
end;
/

begin
  select count(*)
    into o_count
  from user_triggers
  where trigger_name = 'REEMPLAZAR_SCOOTER';
  if o_count > 0 then 
     execute immediate 'drop trigger REEMPLAZAR_SCOOTER';
  end if;
end;
/

SET LINESIZE 200

PROMPT TRIGGER 1: SE DESEA QUE CADA VEZ QUE SE INICIE UN SERVICIO SE COBRE INSTANTÁNEAMENTE
PROMPT EL MONTO DEL PRECIO A LOS PUNTOS DEL USUARIO. SI ESTE NO DISPONE DE PUNTOS
PROMPT IREMOS A SU TARJETA DE CRÉDITO A VERIFICAR QUE SE ENCUENTRE VIGENTE. EN CASO CONTRARIO
PROMPT MARCAREMOS ERROR -20001. ADEMÁS VERIFICAMOS QUE LOS DIAS_CUSTODIA EN SERVICIO_RENTA ESTÁN CORRECTOS

CREATE OR REPLACE TRIGGER COBRAR
BEFORE INSERT OR UPDATE ON SERVICIO
FOR EACH ROW
DECLARE
  V_PUNTOS NUMBER:=0;
  V_MES_EXPIRA NUMBER:=0;
  V_ANIO_EXPIRA NUMBER:=0;
  V_DIAS_CUSTODIA NUMBER:=0;
  V_EXCENTO NUMBER:=0;
BEGIN
IF :NEW.TIPO_SERVICIO != 'B' THEN
  SELECT PUNTOS INTO V_PUNTOS FROM USUARIO WHERE USUARIO_ID = :NEW.USUARIO_ID;
  IF V_PUNTOS >= :NEW.PRECIO THEN
      UPDATE USUARIO SET PUNTOS = PUNTOS - :NEW.PRECIO WHERE USUARIO_ID = :NEW.USUARIO_ID;
  ELSE
    SELECT COUNT(*) INTO V_EXCENTO FROM DUAL WHERE 
    EXISTS(SELECT USUARIO_ID FROM TARJETA_CLIENTE WHERE USUARIO_ID = :NEW.USUARIO_ID);
    IF V_EXCENTO = 1 THEN
    SELECT MES_EXPIRACION INTO V_MES_EXPIRA FROM TARJETA_CLIENTE WHERE USUARIO_ID = :NEW.USUARIO_ID;
    SELECT ANIO_EXPIRACION INTO V_ANIO_EXPIRA FROM TARJETA_CLIENTE WHERE USUARIO_ID = :NEW.USUARIO_ID;

    IF (EXTRACT(YEAR FROM SYSDATE)-2000) > V_ANIO_EXPIRA THEN
      RAISE_APPLICATION_ERROR(-20145,'LA TARJETA DE CRÉDITO NO SE ENCUENTRA VIGENTE.');
    ELSE
      IF EXTRACT(MONTH FROM SYSDATE) > V_MES_EXPIRA AND (EXTRACT(YEAR FROM SYSDATE)-2000) = V_ANIO_EXPIRA THEN
        RAISE_APPLICATION_ERROR(-20145,'LA TARJETA DE CRÉDITO NO SE ENCUENTRA VIGENTE.');
      END IF;
    END IF;
    ELSE
      RAISE_APPLICATION_ERROR(-20145,'EL CLIENTE NO TIENE TARJETA REGISTRADA');
    END IF;
  END IF;
END IF;
END;
/
